import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import java.util.Set;

public class SwitchBetweenWindows {

    public static void main(String[] args) {
        // Set the path to the WebDriver executable
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");  // Replace with your WebDriver path

        // Initialize WebDriver (This can be changed to any browser-specific driver, e.g., FirefoxDriver, EdgeDriver, etc.)
        WebDriver driver = new ChromeDriver();  // Replace with your WebDriver initialization

        // Open the first URL in the first window
        driver.get("https://www.example.com");  // Replace with your first URL

        // Get the window handle of the first window
        String firstWindowHandle = driver.getWindowHandle();

        // Open a new window and switch to it using JavascriptExecutor
        JavascriptExecutor js = (JavascriptExecutor) driver;
        js.executeScript("window.open('about:blank','_blank');");

        // Get the window handles of all open windows
        Set<String> windowHandles = driver.getWindowHandles();

        // Switch to the new window (second window)
        for (String handle : windowHandles) {
            if (!handle.equals(firstWindowHandle)) {
                driver.switchTo().window(handle);
                break;
            }
        }

        // Open the second URL in the second window
        driver.get("https://www.anotherexample.com");  // Replace with your second URL

        // Function to switch between windows based on title
        switchToWindowByTitle(driver, "Example Domain");  // Replace with part of the title of the first URL

        // Perform any actions in the first window
        System.out.println("Switched to window: " + driver.getTitle());

        // Switch back to the second window by title
        switchToWindowByTitle(driver, "Another Example Domain");  // Replace with part of the title of the second URL

        // Perform any actions in the second window
        System.out.println("Switched to window: " + driver.getTitle());

        // Close all windows
        driver.quit();
    }

    // Method to switch between windows based on part of the title
    public static void switchToWindowByTitle(WebDriver driver, String titleContains) {
        Set<String> windowHandles = driver.getWindowHandles();

        for (String handle : windowHandles) {
            driver.switchTo().window(handle);
            if (driver.getTitle().contains(titleContains)) {
                break;
            }
        }
    }

public static boolean isScreenOpen(WebDriver driver, String titleContains) {
        // Get all the window handles
        Set<String> windowHandles = driver.getWindowHandles();

        // Iterate through each window handle
        for (String handle : windowHandles) {
            // Switch to the window
            driver.switchTo().window(handle);

            // Check if the title contains the specified text
            if (driver.getTitle().contains(titleContains)) {
                System.out.println("A window with title containing '" + titleContains + "' is already open.");
                return true;  // Return true if the window is found
            }
        }

        // If no window with the specified title is found, return false
        System.out.println("No window with title containing '" + titleContains + "' is open.");
        return false;
    }
}
===========================================
    public static String switchToNewlyOpenedWindow(WebDriver driver) {
        // Store the current window handle
        String originalWindow = driver.getWindowHandle();

        // Get all the window handles before clicking the URL
        Set<String> existingWindows = driver.getWindowHandles();

        // Perform the action that opens the new tab/window (e.g., clicking a link)
        // This part should be done before calling this method, so the new window is opened

        // Wait for the new window to be opened (you might need an explicit wait here)

        // Get all the window handles after the new window is opened
        Set<String> allWindows = driver.getWindowHandles();

        // Loop through the handles and switch to the new window
        for (String window : allWindows) {
            if (!existingWindows.contains(window)) {
                // Switch to the new window
                driver.switchTo().window(window);
                
                // Print the title of the new window for verification (optional)
                String newWindowTitle = driver.getTitle();
                System.out.println("Switched to new window/tab with title: " + newWindowTitle);
                
                return newWindowTitle;  // Return the title of the new window/tab
            }
        }

        // If no new window is found (which shouldn't happen if the new tab is opened), return null
        System.out.println("No new window or tab was found.");
        return null;
    }
=====================
public boolean isElementDisplayed(WebElement element) {
    try {
        // Attempt to check if the element is displayed
        return element.isDisplayed();
    } catch (StaleElementReferenceException e) {
        // If the element is stale (no longer in the DOM), return false
        System.out.println("Element is stale: " + e.getMessage());
        return false;
    }
}
